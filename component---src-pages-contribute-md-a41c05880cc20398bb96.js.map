{"version":3,"sources":["webpack:///./src/pages/Contribute.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,gOACA,6DACA,sBACE,kBAAIC,WAAW,MAAf,sDACA,kBAAIA,WAAW,MAAf,oCAEF,iBAAQ,CACN,GAAM,iBADR,iBAGA,wDACA,sBACE,kBAAIA,WAAW,MAAf,uBACA,kBAAIA,WAAW,MAAf,0BACA,kBAAIA,WAAW,MAAf,iDACA,kBAAIA,WAAW,MAAf,2EAEF,2NACA,iBAAQ,CACN,GAAM,0BADR,0BAGA,wDACA,sBACE,kBAAIA,WAAW,MAAf,MAA2B,kBAAIA,WAAW,MACtC,kBAAIA,WAAW,MAAf,mBAAwC,sBAAQA,WAAW,MAAnB,cACxC,kBAAIA,WAAW,MAAf,0BAA+C,sBAAQA,WAAW,MAAnB,iBAEnD,kBAAIA,WAAW,MAAf,QAA6B,kBAAIA,WAAW,MACxC,kBAAIA,WAAW,MAAf,mBAAwC,sBAAQA,WAAW,MAAnB,gBACxC,kBAAIA,WAAW,MAAf,0BAA+C,sBAAQA,WAAW,MAAnB,mBAEnD,kBAAIA,WAAW,MAAf,SAA8B,kBAAIA,WAAW,MACzC,kBAAIA,WAAW,MAAf,mBAAwC,sBAAQA,WAAW,MAAnB,WACxC,kBAAIA,WAAW,MAAf,0BAA+C,sBAAQA,WAAW,MAAnB,cAEnD,kBAAIA,WAAW,MAAf,qBAA0C,sBAAQA,WAAW,MAAnB,WAA1C,UACA,kBAAIA,WAAW,MAAf,aAAkC,sBAAQA,WAAW,MAAnB,WAAlC,UAEF,kCACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4DADQ,SAGpB,kBAAIA,WAAW,MAAf,WAAgC,mBAAGA,WAAW,MAAS,CACnD,KAAQ,8DADoB,mB,gMAQtCJ,EAAWK,gBAAiB","file":"component---src-pages-contribute-md-a41c05880cc20398bb96.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/spark/spark/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"contributions\"\n    }}>{`Contributions`}</h1>\n    <p>{`You are welcome to contribute to this project. The Spark server is used in several commercial and open source projects. Therefore we have a high quality standard and we carefully review submissions. `}</p>\n    <p>{`When you want to contribute changes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Contact us before start working on a major change.`}</li>\n      <li parentName=\"ul\">{`Fork and send us a pull request`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"pull-requests\"\n    }}>{`Pull requests`}</h3>\n    <p>{`When you send us a pull request`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Make sure it builds`}</li>\n      <li parentName=\"ul\">{`Make sure it's tested `}</li>\n      <li parentName=\"ul\">{`The pull request should cover only one change`}</li>\n      <li parentName=\"ul\">{`Accept that we might reject it because it conflicts with our strategy.`}</li>\n    </ul>\n    <p>{`We do appreciate suggestions, but the Spark FHIR server code is used by us for commercial projects, so we will most probably reject substantial changes unless you coordinate them with us first. `}</p>\n    <h3 {...{\n      \"id\": \"git-branching-strategy\"\n    }}>{`GIT branching strategy`}</h3>\n    <p>{`Our strategy for git branching:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`R4:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Current stable: `}<strong parentName=\"li\">{`r4/master`}</strong></li>\n          <li parentName=\"ul\">{`Current nightly build: `}<strong parentName=\"li\">{`r4/develop`}</strong></li>\n        </ul></li>\n      <li parentName=\"ul\">{`STU3:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Current stable: `}<strong parentName=\"li\">{`stu3/master`}</strong></li>\n          <li parentName=\"ul\">{`Current nightly build: `}<strong parentName=\"li\">{`stu3/develop`}</strong></li>\n        </ul></li>\n      <li parentName=\"ul\">{`DSTU2:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Current stable: `}<strong parentName=\"li\">{`master`}</strong></li>\n          <li parentName=\"ul\">{`Current nightly build: `}<strong parentName=\"li\">{`develop`}</strong></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Feature branches: `}<strong parentName=\"li\">{`feature`}</strong>{`/topic`}</li>\n      <li parentName=\"ul\">{`bugfixes: `}<strong parentName=\"li\">{`bugfix/`}</strong>{`issue`}</li>\n    </ul>\n    <p>{`Based on:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://nvie.com/posts/a-successful-git-branching-model/\"\n        }}>{`NVIE`}</a></li>\n      <li parentName=\"ul\">{`Or see: `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.atlassian.com/git/workflows#!workflow-gitflow\"\n        }}>{`Git workflow`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}